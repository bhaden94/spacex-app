{"version":3,"sources":["components/Sidebar/Sidebar.js","components/Header.js","components/LoadingIcon.js","components/Timeline/TimelineElement.js","components/Timeline/Timeline.js","components/Upcoming.js","components/MainArea.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","useState","sidebarShowHideBtn","setSidebarShowHideBtn","sidebarShowHide","setSidebarShowHide","isTabletOrMobile","useMediaQuery","query","setSidebar","id","className","onClick","to","withRouter","location","header","setHeader","useEffect","pathname","LoadingIcon","role","data","title","setTitle","date","setDate","details","setDetails","link","setLink","btnText","setBtnText","patch","setPatch","name","Date","date_utc","toLocaleString","links","reddit","webcast","small","setUpcomingPastData","event_date_utc","article","contentStyle","background","dateClassName","icon","src","alt","iconStyle","href","target","rel","color","setData","getFullYear","year","setYear","isLoading","setIsLoading","isLoadingMore","setIsLoadingMore","isMobile","loadMoreBtn","size","pastReqOptions","method","headers","Accept","body","JSON","stringify","$gte","$lte","$or","upcoming","options","sort","populate","path","limit","fetchPast","a","fetch","res","json","docs","fetchHistory","currentData","detectPath","loadMore","newData","animate","map","e","index","key","iconOnClick","iconClassName","dateTime","setDateTime","isNextLaunch","setIsNextLaunch","fetchUpcoming","campaign","style","backgroundImage","backgroundPosition","backgroundSize","dateTo","mostSignificantFigure","width","outline","MainArea","exact","component","Timeline","Upcoming","App","basename","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8012463f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nfunction Sidebar() {\r\n  const [sidebarShowHideBtn, setSidebarShowHideBtn] = useState(\"sidebar-hide\")\r\n  const [sidebarShowHide, setSidebarShowHide] = useState(\"hide\")\r\n  const isTabletOrMobile = useMediaQuery({ \r\n    query: '(max-width: 768px)' \r\n  })\r\n\r\n  const setSidebar = () => {\r\n    if (sidebarShowHideBtn === \"sidebar-hide\") {\r\n      setSidebarShowHideBtn(\"sidebar-show\")\r\n      setSidebarShowHide(\"show\")\r\n    }\r\n    else {\r\n      setSidebarShowHideBtn(\"sidebar-hide\")\r\n      setSidebarShowHide(\"hide\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"sidebar\" className={sidebarShowHide}>\r\n    {isTabletOrMobile ? \r\n      <div onClick={setSidebar} className=\"sidebar-open-close\">\r\n        <div className={sidebarShowHideBtn}>\r\n          <div />\r\n        </div>\r\n      </div>\r\n      : \r\n      <div />}\r\n      <ul className=\"sidebar-list\">\r\n        <Link onClick={setSidebar} to=\"/\"><li>Home</li></Link>\r\n        <Link onClick={setSidebar} to=\"/upcoming\"><li>Next Launch</li></Link>\r\n        <Link onClick={setSidebar} to=\"past\"><li>Past Launches</li></Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Header({ location }) {\r\n\tconst [header, setHeader] = useState(\"History\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (location.pathname === \"/upcoming\") {\r\n\t\t\tsetHeader(\"Next Launch\");\r\n\t\t} else if (location.pathname === \"/past\") {\r\n\t\t\tsetHeader(\"Past Launches\");\r\n\t\t} else {\r\n\t\t\tsetHeader(\"History\");\r\n\t\t}\r\n\t}, [location.pathname]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className=\"main-header\">SpaceX {header}</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\n\r\n\r\nfunction LoadingIcon() {\r\n  return (\r\n    <div className=\"spinner-border text-secondary\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingIcon;","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VerticalTimelineElement } from \"react-vertical-timeline-component\";\r\nimport { MDBBtn } from \"mdbreact\";\r\nimport \"react-vertical-timeline-component/style.min.css\";\r\n\r\nfunction TimelineElement({ data, location }) {\r\n\tconst [title, setTitle] = useState(\"Title\");\r\n\tconst [date, setDate] = useState();\r\n\tconst [details, setDetails] = useState(\"No details available.\");\r\n\tconst [link, setLink] = useState();\r\n\tconst [btnText, setBtnText] = useState();\r\n\tconst [patch, setPatch] = useState(\r\n\t\t\"https://images2.imgbox.com/d2/3b/bQaWiil0_o.png\"\r\n\t);\r\n\tconst style = {\r\n\t\tbackground: \"#fff\",\r\n\t};\r\n\r\n\tconst setUpcomingPastData = () => {\r\n\t\tsetTitle(data.name);\r\n\t\tsetDate(new Date(data.date_utc).toLocaleString());\r\n\t\tif (data.details) {\r\n\t\t\tsetDetails(data.details);\r\n\t\t}\r\n\t\tif (location.pathname === \"/upcoming\") {\r\n\t\t\tsetLink(data.links.reddit);\r\n\t\t\tsetBtnText(\"Reddit Link\");\r\n\t\t} else {\r\n\t\t\tsetLink(data.links.webcast);\r\n\t\t\tsetBtnText(\"Video Link\");\r\n\t\t}\r\n\t\tif (data.links.patch?.small) {\r\n\t\t\tsetPatch(data.links.patch.small);\r\n\t\t}\r\n\t};\r\n\r\n\tconst setHistoryData = () => {\r\n\t\tsetTitle(data.title);\r\n\t\tsetDate(new Date(data.event_date_utc).toLocaleString());\r\n\t\tsetDetails(data.details);\r\n\t\tsetLink(data.links.article);\r\n\t\tsetBtnText(\"Article Link\");\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tlocation.pathname === \"/upcoming\" ||\r\n\t\t\tlocation.pathname === \"/past\"\r\n\t\t) {\r\n\t\t\tsetUpcomingPastData();\r\n\t\t} else {\r\n\t\t\tsetHistoryData();\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [location]);\r\n\r\n\treturn (\r\n\t\t<VerticalTimelineElement\r\n\t\t\tclassName=\"vertical-timeline-element--work\"\r\n\t\t\tcontentStyle={style}\r\n\t\t\tdate={date}\r\n\t\t\tdateClassName=\"timeline-card-date\"\r\n\t\t\ticon={<img className=\"icon-img\" src={patch} alt=\"mission patch\" />}\r\n\t\t\ticonStyle={{ background: \"#3E4551\" }}\r\n\t\t>\r\n\t\t\t<h3 className=\"vertical-timeline-element-title\">{title}</h3>\r\n\t\t\t<p>{details}</p>\r\n\t\t\t<div>\r\n\t\t\t\t<MDBBtn\r\n\t\t\t\t\thref={link}\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\t\tclassName=\"timeline-card-btn\"\r\n\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{btnText}\r\n\t\t\t\t</MDBBtn>\r\n\t\t\t</div>\r\n\t\t</VerticalTimelineElement>\r\n\t);\r\n}\r\n\r\nexport default withRouter(TimelineElement);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n\tVerticalTimeline,\r\n\tVerticalTimelineElement,\r\n} from \"react-vertical-timeline-component\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport LoadingIcon from \"./../LoadingIcon\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport TimelineElement from \"./TimelineElement\";\r\nimport \"react-vertical-timeline-component/style.min.css\";\r\n\r\nfunction Timeline({ location }) {\r\n\tconst [data, setData] = useState([]);\r\n\tconst [year, setYear] = useState(new Date().getFullYear());\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\tconst isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\r\n\r\n\tconst loadMoreBtn = (\r\n\t\t<MDBIcon className=\"timeline-card-load-btn\" icon=\"plus\" size=\"2x\" />\r\n\t);\r\n\r\n\tconst pastReqOptions = {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {\r\n\t\t\tAccept: \"application/json\",\r\n\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t},\r\n\t\tbody: JSON.stringify({\r\n\t\t\tquery: {\r\n\t\t\t\tdate_utc: {\r\n\t\t\t\t\t$gte: `${year}-01-01T00:00:00.000Z`,\r\n\t\t\t\t\t$lte: `${year}-12-31T23:59:59.000Z`,\r\n\t\t\t\t},\r\n\t\t\t\t$or: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tupcoming: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\toptions: {\r\n\t\t\t\tsort: {\r\n\t\t\t\t\tdate_utc: \"desc\",\r\n\t\t\t\t},\r\n\t\t\t\tpopulate: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpath: \"past\",\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tlimit: \"50\",\r\n\t\t\t},\r\n\t\t}),\r\n\t};\r\n\r\n\t// https://github.com/r-spacex/SpaceX-API/blob/master/docs/v4/launches/query.md\r\n\tconst fetchPast = async () => {\r\n\t\tconst res = await fetch(\r\n\t\t\t`https://api.spacexdata.com/v4/launches/query`,\r\n\t\t\tpastReqOptions\r\n\t\t);\r\n\t\tconst json = await res.json();\r\n\t\tsetYear(year - 1);\r\n\t\treturn json.docs;\r\n\t};\r\n\r\n\t// this method still uses v3 of the spacexapi\r\n\t// v4 does not have history so continue using this\r\n\t// until we can replace the home page\r\n\tconst fetchHistory = async () => {\r\n\t\tsetYear(new Date().getFullYear());\r\n\t\tconst res = await fetch(\"https://api.spacexdata.com/v3/history\");\r\n\t\tconst json = await res.json();\r\n\t\treturn json;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function detectPath() {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tlet currentData;\r\n\t\t\tif (location.pathname === \"/past\") {\r\n\t\t\t\tcurrentData = await fetchPast();\r\n\t\t\t} else {\r\n\t\t\t\tcurrentData = await fetchHistory();\r\n\t\t\t}\r\n\t\t\tsetData(currentData);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t\tdetectPath();\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [location]);\r\n\r\n\tconst loadMore = async () => {\r\n\t\tsetIsLoadingMore(true);\r\n\t\tconst newData = await fetchPast();\r\n\t\tsetData([...data, ...newData]);\r\n\t\tsetIsLoadingMore(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"timeline\">\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<LoadingIcon />\r\n\t\t\t) : (\r\n\t\t\t\t<div className=\"timeline-cards\">\r\n\t\t\t\t\t<VerticalTimeline animate={isMobile ? false : true}>\r\n\t\t\t\t\t\t{data.map((e, index) => (\r\n\t\t\t\t\t\t\t<TimelineElement key={index} data={e} />\r\n\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t{location.pathname === \"/past\" ? (\r\n\t\t\t\t\t\t\t<VerticalTimelineElement\r\n\t\t\t\t\t\t\t\ticonOnClick={loadMore}\r\n\t\t\t\t\t\t\t\ticonClassName=\"timeline-card-load-more-icon\"\r\n\t\t\t\t\t\t\t\ticon={\r\n\t\t\t\t\t\t\t\t\tisLoadingMore ? (\r\n\t\t\t\t\t\t\t\t\t\t<LoadingIcon />\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\tloadMoreBtn\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<VerticalTimelineElement iconClassName=\"timeline-card-load-icon\" />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</VerticalTimeline>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default withRouter(Timeline);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n\tMDBJumbotron,\r\n\tMDBBtn,\r\n\tMDBContainer,\r\n\tMDBRow,\r\n\tMDBCol,\r\n\tMDBCardTitle,\r\n} from \"mdbreact\";\r\nimport DateCountdown from \"react-date-countdown-timer\";\r\nimport LoadingIcon from \"./LoadingIcon\";\r\n\r\nfunction Upcoming() {\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [details, setDetails] = useState(\"\");\r\n\tconst [patch, setPatch] = useState(\r\n\t\t\"https://images2.imgbox.com/d2/3b/bQaWiil0_o.png\"\r\n\t);\r\n\tconst [link, setLink] = useState(\"\");\r\n\tconst [dateTime, setDateTime] = useState();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [isNextLaunch, setIsNextLaunch] = useState(true);\r\n\r\n\tconst fetchUpcoming = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tconst res = await fetch(\"https://api.spacexdata.com/v4/launches/next\");\r\n\t\tconst json = await res.json();\r\n\t\tif (!(json.links.reddit.campaign || json.date_utc)) {\r\n\t\t\tsetIsNextLaunch(false);\r\n\t\t} else {\r\n\t\t\tsetTitle(json.name);\r\n\t\t\tsetDetails(json.details);\r\n\t\t\tif (json.links.patch?.small) {\r\n\t\t\t\tsetPatch(json.links.patch.small);\r\n\t\t\t}\r\n\t\t\tsetLink(json.links.reddit.campaign);\r\n\t\t\tsetDateTime(json.date_utc);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchUpcoming();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<MDBContainer className=\"text-center\">\r\n\t\t\t\t<MDBRow>\r\n\t\t\t\t\t<MDBCol>\r\n\t\t\t\t\t\t{isLoading ? (\r\n\t\t\t\t\t\t\t<LoadingIcon />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<MDBJumbotron className=\"p-0\">\r\n\t\t\t\t\t\t\t\t<MDBCol\r\n\t\t\t\t\t\t\t\t\tclassName=\"text-white text-center py-5 my-5\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(https://live.staticflickr.com/65535/49941719687_ea25d84d03_h.jpg)`,\r\n\t\t\t\t\t\t\t\t\t\tbackgroundPosition: \"35% 0%\",\r\n\t\t\t\t\t\t\t\t\t\tbackgroundSize: \"cover\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<MDBCol className=\"pb-5\">\r\n\t\t\t\t\t\t\t\t\t\t{isNextLaunch ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBCardTitle className=\"font-bold\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DateCountdown\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdateTo={dateTime}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmostSignificantFigure=\"day\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MDBCardTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={patch}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"mission patch\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBCardTitle className=\"h1-responsive pt-3 pb-3 font-bold\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MDBCardTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-5\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{details}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thref={link}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tReddit Link\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MDBBtn>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBCardTitle className=\"font-bold\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tThere is no data available\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor the next SpaceX launch\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MDBCardTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={patch}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"mission patch\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBCardTitle className=\"h1-responsive pt-3 pb-3 font-bold\"></MDBCardTitle>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-5\"></p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t\t\t</MDBJumbotron>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</MDBCol>\r\n\t\t\t\t</MDBRow>\r\n\t\t\t</MDBContainer>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default withRouter(Upcoming);\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Timeline from \"./Timeline/Timeline\";\r\nimport Upcoming from \"./Upcoming\";\r\n\r\nfunction MainArea() {\r\n    \r\n  return (\r\n   \r\n      <div className=\"page\">\r\n        <div className=\"main\">\r\n          <Header />\r\n          <hr />\r\n          <Route exact path={[\"/\", \"/past\"]} component={Timeline} />\r\n          <Route exact path=\"/upcoming\" component={Upcoming} />  \r\n        </div>\r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default MainArea;","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport MainArea from \"./components/MainArea\";\r\nimport \"./css/App.css\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <BrowserRouter basename=\"/spacex-app\">\r\n      <div className=\"App\">\r\n        <Route path=\"/\" component={Sidebar} />\r\n        <Route path=\"/\" component={MainArea} /> \r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \r\nimport 'bootstrap-css-only/css/bootstrap.min.css'; \r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}