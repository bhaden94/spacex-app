{"version":3,"sources":["components/Sidebar/Sidebar.js","components/Header.js","components/LoadingIcon.js","components/Timeline/TimelineElement.js","components/Timeline/Timeline.js","components/Upcoming.js","components/MainArea.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","useState","sidebarShowHideBtn","setSidebarShowHideBtn","sidebarShowHide","setSidebarShowHide","isTabletOrMobile","useMediaQuery","query","setSidebar","id","className","onClick","to","withRouter","location","header","setHeader","useEffect","pathname","LoadingIcon","role","data","title","setTitle","date","setDate","details","setDetails","link","setLink","btnText","setBtnText","patch","setPatch","name","Date","date_utc","toLocaleString","links","reddit","webcast","small","setUpcomingPastData","event_date_utc","article","contentStyle","background","dateClassName","icon","src","alt","iconStyle","href","target","rel","color","setData","getFullYear","year","setYear","isLoading","setIsLoading","isLoadingMore","setIsLoadingMore","isMobile","loadMoreBtn","size","pastReqOptions","method","headers","Accept","body","JSON","stringify","$gte","$lte","$or","upcoming","options","sort","populate","path","limit","fetchPast","a","fetch","res","json","docs","fetchHistory","currentData","detectPath","loadMore","newData","animate","map","e","index","key","iconOnClick","iconClassName","dateTime","setDateTime","isNextLaunch","setIsNextLaunch","fetchUpcoming","campaign","style","backgroundImage","backgroundPosition","backgroundSize","dateTo","mostSignificantFigure","width","outline","MainArea","exact","component","Timeline","Upcoming","App","basename","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.76feaa51.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMediaQuery } from 'react-responsive';\n\nfunction Sidebar() {\n  const [sidebarShowHideBtn, setSidebarShowHideBtn] = useState(\"sidebar-hide\")\n  const [sidebarShowHide, setSidebarShowHide] = useState(\"hide\")\n  const isTabletOrMobile = useMediaQuery({ \n    query: '(max-width: 768px)' \n  })\n\n  const setSidebar = () => {\n    if (sidebarShowHideBtn === \"sidebar-hide\") {\n      setSidebarShowHideBtn(\"sidebar-show\")\n      setSidebarShowHide(\"show\")\n    }\n    else {\n      setSidebarShowHideBtn(\"sidebar-hide\")\n      setSidebarShowHide(\"hide\")\n    }\n  }\n\n  return (\n    <div id=\"sidebar\" className={sidebarShowHide}>\n    {isTabletOrMobile ? \n      <div onClick={setSidebar} className=\"sidebar-open-close\">\n        <div className={sidebarShowHideBtn}>\n          <div />\n        </div>\n      </div>\n      : \n      <div />}\n      <ul className=\"sidebar-list\">\n        <Link onClick={setSidebar} to=\"/\"><li>Home</li></Link>\n        <Link onClick={setSidebar} to=\"/upcoming\"><li>Next Launch</li></Link>\n        <Link onClick={setSidebar} to=\"past\"><li>Past Launches</li></Link>\n      </ul>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction Header({ location }) {\n\tconst [header, setHeader] = useState(\"History\");\n\n\tuseEffect(() => {\n\t\tif (location.pathname === \"/upcoming\") {\n\t\t\tsetHeader(\"Next Launch\");\n\t\t} else if (location.pathname === \"/past\") {\n\t\t\tsetHeader(\"Past Launches\");\n\t\t} else {\n\t\t\tsetHeader(\"History\");\n\t\t}\n\t}, [location.pathname]);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"main-header\">SpaceX {header}</h1>\n\t\t</div>\n\t);\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\n\n\nfunction LoadingIcon() {\n  return (\n    <div className=\"spinner-border text-secondary\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n}\n\nexport default LoadingIcon;","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { VerticalTimelineElement } from \"react-vertical-timeline-component\";\nimport { MDBBtn } from \"mdbreact\";\nimport \"react-vertical-timeline-component/style.min.css\";\n\nfunction TimelineElement({ data, location }) {\n\tconst [title, setTitle] = useState(\"Title\");\n\tconst [date, setDate] = useState();\n\tconst [details, setDetails] = useState(\"No details available.\");\n\tconst [link, setLink] = useState();\n\tconst [btnText, setBtnText] = useState();\n\tconst [patch, setPatch] = useState(\n\t\t\"https://images2.imgbox.com/d2/3b/bQaWiil0_o.png\"\n\t);\n\tconst style = {\n\t\tbackground: \"#fff\",\n\t};\n\n\tconst setUpcomingPastData = () => {\n\t\tsetTitle(data.name);\n\t\tsetDate(new Date(data.date_utc).toLocaleString());\n\t\tif (data.details) {\n\t\t\tsetDetails(data.details);\n\t\t}\n\t\tif (location.pathname === \"/upcoming\") {\n\t\t\tsetLink(data.links.reddit);\n\t\t\tsetBtnText(\"Reddit Link\");\n\t\t} else {\n\t\t\tsetLink(data.links.webcast);\n\t\t\tsetBtnText(\"Video Link\");\n\t\t}\n\t\tif (data.links.patch?.small) {\n\t\t\tsetPatch(data.links.patch.small);\n\t\t}\n\t};\n\n\tconst setHistoryData = () => {\n\t\tsetTitle(data.title);\n\t\tsetDate(new Date(data.event_date_utc).toLocaleString());\n\t\tsetDetails(data.details);\n\t\tsetLink(data.links.article);\n\t\tsetBtnText(\"Article Link\");\n\t};\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tlocation.pathname === \"/upcoming\" ||\n\t\t\tlocation.pathname === \"/past\"\n\t\t) {\n\t\t\tsetUpcomingPastData();\n\t\t} else {\n\t\t\tsetHistoryData();\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [location]);\n\n\treturn (\n\t\t<VerticalTimelineElement\n\t\t\tclassName=\"vertical-timeline-element--work\"\n\t\t\tcontentStyle={style}\n\t\t\tdate={date}\n\t\t\tdateClassName=\"timeline-card-date\"\n\t\t\ticon={<img className=\"icon-img\" src={patch} alt=\"mission patch\" />}\n\t\t\ticonStyle={{ background: \"#3E4551\" }}\n\t\t>\n\t\t\t<h3 className=\"vertical-timeline-element-title\">{title}</h3>\n\t\t\t<p>{details}</p>\n\t\t\t<div>\n\t\t\t\t<MDBBtn\n\t\t\t\t\thref={link}\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\tclassName=\"timeline-card-btn\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t>\n\t\t\t\t\t{btnText}\n\t\t\t\t</MDBBtn>\n\t\t\t</div>\n\t\t</VerticalTimelineElement>\n\t);\n}\n\nexport default withRouter(TimelineElement);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n\tVerticalTimeline,\n\tVerticalTimelineElement,\n} from \"react-vertical-timeline-component\";\nimport { MDBIcon } from \"mdbreact\";\nimport LoadingIcon from \"./../LoadingIcon\";\nimport { useMediaQuery } from \"react-responsive\";\nimport TimelineElement from \"./TimelineElement\";\nimport \"react-vertical-timeline-component/style.min.css\";\n\nfunction Timeline({ location }) {\n\tconst [data, setData] = useState([]);\n\tconst [year, setYear] = useState(new Date().getFullYear());\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [isLoadingMore, setIsLoadingMore] = useState(false);\n\tconst isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\n\n\tconst loadMoreBtn = (\n\t\t<MDBIcon className=\"timeline-card-load-btn\" icon=\"plus\" size=\"2x\" />\n\t);\n\n\tconst pastReqOptions = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\tAccept: \"application/json\",\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tquery: {\n\t\t\t\tdate_utc: {\n\t\t\t\t\t$gte: `${year}-01-01T00:00:00.000Z`,\n\t\t\t\t\t$lte: `${year}-12-31T23:59:59.000Z`,\n\t\t\t\t},\n\t\t\t\t$or: [\n\t\t\t\t\t{\n\t\t\t\t\t\tupcoming: false,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tsort: {\n\t\t\t\t\tdate_utc: \"desc\",\n\t\t\t\t},\n\t\t\t\tpopulate: [\n\t\t\t\t\t{\n\t\t\t\t\t\tpath: \"past\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tlimit: \"50\",\n\t\t\t},\n\t\t}),\n\t};\n\n\t// https://github.com/r-spacex/SpaceX-API/blob/master/docs/v4/launches/query.md\n\tconst fetchPast = async () => {\n\t\tconst res = await fetch(\n\t\t\t`https://api.spacexdata.com/v4/launches/query`,\n\t\t\tpastReqOptions\n\t\t);\n\t\tconst json = await res.json();\n\t\tsetYear(year - 1);\n\t\treturn json.docs;\n\t};\n\n\t// this method still uses v3 of the spacexapi\n\t// v4 does not have history so continue using this\n\t// until we can replace the home page\n\tconst fetchHistory = async () => {\n\t\tsetYear(new Date().getFullYear());\n\t\tconst res = await fetch(\"https://api.spacexdata.com/v3/history\");\n\t\tconst json = await res.json();\n\t\treturn json;\n\t};\n\n\tuseEffect(() => {\n\t\tasync function detectPath() {\n\t\t\tsetIsLoading(true);\n\t\t\tlet currentData;\n\t\t\tif (location.pathname === \"/past\") {\n\t\t\t\tcurrentData = await fetchPast();\n\t\t\t} else {\n\t\t\t\tcurrentData = await fetchHistory();\n\t\t\t}\n\t\t\tsetData(currentData);\n\t\t\tsetIsLoading(false);\n\t\t}\n\t\tdetectPath();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [location]);\n\n\tconst loadMore = async () => {\n\t\tsetIsLoadingMore(true);\n\t\tconst newData = await fetchPast();\n\t\tsetData([...data, ...newData]);\n\t\tsetIsLoadingMore(false);\n\t};\n\n\treturn (\n\t\t<div className=\"timeline\">\n\t\t\t{isLoading ? (\n\t\t\t\t<LoadingIcon />\n\t\t\t) : (\n\t\t\t\t<div className=\"timeline-cards\">\n\t\t\t\t\t<VerticalTimeline animate={isMobile ? false : true}>\n\t\t\t\t\t\t{data.map((e, index) => (\n\t\t\t\t\t\t\t<TimelineElement key={index} data={e} />\n\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t{location.pathname === \"/past\" ? (\n\t\t\t\t\t\t\t<VerticalTimelineElement\n\t\t\t\t\t\t\t\ticonOnClick={loadMore}\n\t\t\t\t\t\t\t\ticonClassName=\"timeline-card-load-more-icon\"\n\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\tisLoadingMore ? (\n\t\t\t\t\t\t\t\t\t\t<LoadingIcon />\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\tloadMoreBtn\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<VerticalTimelineElement iconClassName=\"timeline-card-load-icon\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</VerticalTimeline>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default withRouter(Timeline);\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n\tMDBJumbotron,\n\tMDBBtn,\n\tMDBContainer,\n\tMDBRow,\n\tMDBCol,\n\tMDBCardTitle,\n} from \"mdbreact\";\nimport DateCountdown from \"react-date-countdown-timer\";\nimport LoadingIcon from \"./LoadingIcon\";\n\nfunction Upcoming() {\n\tconst [title, setTitle] = useState(\"\");\n\tconst [details, setDetails] = useState(\"\");\n\tconst [patch, setPatch] = useState(\n\t\t\"https://images2.imgbox.com/d2/3b/bQaWiil0_o.png\"\n\t);\n\tconst [link, setLink] = useState(\"\");\n\tconst [dateTime, setDateTime] = useState();\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [isNextLaunch, setIsNextLaunch] = useState(true);\n\n\tconst fetchUpcoming = async () => {\n\t\tsetIsLoading(true);\n\t\tconst res = await fetch(\"https://api.spacexdata.com/v4/launches/next\");\n\t\tconst json = await res.json();\n\t\tif (!(json.links.reddit.campaign || json.date_utc)) {\n\t\t\tsetIsNextLaunch(false);\n\t\t} else {\n\t\t\tsetTitle(json.name);\n\t\t\tsetDetails(json.details);\n\t\t\tif (json.links.patch?.small) {\n\t\t\t\tsetPatch(json.links.patch.small);\n\t\t\t}\n\t\t\tsetLink(json.links.reddit.campaign);\n\t\t\tsetDateTime(json.date_utc);\n\t\t}\n\t\tsetIsLoading(false);\n\t};\n\n\tuseEffect(() => {\n\t\tfetchUpcoming();\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<MDBContainer className=\"text-center\">\n\t\t\t\t<MDBRow>\n\t\t\t\t\t<MDBCol>\n\t\t\t\t\t\t{isLoading ? (\n\t\t\t\t\t\t\t<LoadingIcon />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<MDBJumbotron className=\"p-0\">\n\t\t\t\t\t\t\t\t<MDBCol\n\t\t\t\t\t\t\t\t\tclassName=\"text-white text-center py-5 my-5\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(https://live.staticflickr.com/65535/49941719687_ea25d84d03_h.jpg)`,\n\t\t\t\t\t\t\t\t\t\tbackgroundPosition: \"35% 0%\",\n\t\t\t\t\t\t\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MDBCol className=\"pb-5\">\n\t\t\t\t\t\t\t\t\t\t{isNextLaunch ? (\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBCardTitle className=\"font-bold\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DateCountdown\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdateTo={dateTime}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmostSignificantFigure=\"day\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</MDBCardTitle>\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={patch}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100px\" }}\n\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"mission patch\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBCardTitle className=\"h1-responsive pt-3 pb-3 font-bold\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t\t\t\t</MDBCardTitle>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{details}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBBtn\n\t\t\t\t\t\t\t\t\t\t\t\t\thref={link}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\toutline\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"light\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tReddit Link\n\t\t\t\t\t\t\t\t\t\t\t\t</MDBBtn>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBCardTitle className=\"font-bold\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tThere is no data available\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor the next SpaceX launch\n\t\t\t\t\t\t\t\t\t\t\t\t</MDBCardTitle>\n\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={patch}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100px\" }}\n\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"mission patch\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<MDBCardTitle className=\"h1-responsive pt-3 pb-3 font-bold\"></MDBCardTitle>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"mb-5\"></p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</MDBCol>\n\t\t\t\t\t\t\t\t</MDBCol>\n\t\t\t\t\t\t\t</MDBJumbotron>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</MDBCol>\n\t\t\t\t</MDBRow>\n\t\t\t</MDBContainer>\n\t\t</div>\n\t);\n}\n\nexport default withRouter(Upcoming);\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Timeline from \"./Timeline/Timeline\";\nimport Upcoming from \"./Upcoming\";\n\nfunction MainArea() {\n    \n  return (\n   \n      <div className=\"page\">\n        <div className=\"main\">\n          <Header />\n          <hr />\n          <Route exact path={[\"/\", \"/past\"]} component={Timeline} />\n          <Route exact path=\"/upcoming\" component={Upcoming} />  \n        </div>\n      </div>\n    \n  );\n}\n\nexport default MainArea;","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport MainArea from \"./components/MainArea\";\nimport \"./css/App.css\";\n\nfunction App() {\n\n  return (\n    <BrowserRouter basename=\"/spacex-app\">\n      <div className=\"App\">\n        <Route path=\"/\" component={Sidebar} />\n        <Route path=\"/\" component={MainArea} /> \n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}